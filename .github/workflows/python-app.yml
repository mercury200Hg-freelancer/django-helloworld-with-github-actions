# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Gather Repository Info
      run: |
        echo "::set-output name=HEAD::$(git rev-parse --short HEAD)"
        echo "::set-output name=TIMESTAMP::$(git show -s --format=%ct $(git rev-parse --short HEAD) )"
        echo "::set-output name=BRANCH::$(git rev-parse --abbrev-ref HEAD)"
      id: repo_info

    - name: Generate Docker Labels
      run: |
        labels="--labels \"HEAD=${{ steps.repo_info.outputs.HEAD }}\" \
                --labels \"TIMESTAMP=${{ steps.repo_info.outputs.TIMESTAMP }}\" \
                --labels \"BRANCH=${{ steps.repo_info.outputs.BRANCH }}\""
        echo "::set-output name=LABELS::$labels"
      id: docker_labels

    - name: Docker login
      env:
        DOCKER_USER: ${{ secrets.DOCKER_USER }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |
        docker login -u $DOCKER_USER -p $DOCKER_PASSWORD

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Set Image Tag
      run: echo "::set-output name=IMAGE_TAG::$(date +%s)"
      id: set_image_tag

    - name: Build the Docker image
      env:
        IMAGE_TAG: ${{ steps.set_image_tag.outputs.IMAGE_TAG }}
      run: |
        echo $IMAGE_TAG
        docker build . --file Dockerfile --tag ${{ secrets.DOCKER_USER}}/django-hello-world:$IMAGE_TAG ${{ steps.docker_labels.outputs.labels }}

    - name: Push the Dockerimage to Dockerhub
      env:
        IMAGE_TAG: ${{ steps.set_image_tag.outputs.IMAGE_TAG }}
      run: docker push ${{ secrets.DOCKER_USER}}/django-hello-world:$IMAGE_TAG